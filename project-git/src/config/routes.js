// src/config/routes.js
/**
 * üó∫Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @description –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ –∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
 */

import { 
  LayoutDashboard, 
  Users, 
  Volume2, 
  SendHorizontal, 
  GraduationCap,
  BookOpen,
  Mail,
  Settings,
  HardHat,
  Home
} from 'lucide-react';

/**
 * –ú–∞—Å—Å–∏–≤ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
export const routes = [
  {
    path: '/',
    name: 'home',
    title: '–ì–ª–∞–≤–Ω–∞—è',
    icon: Home,
    component: 'HomePage',
    exact: true,
    showInMenu: false
  },
  {
    path: '/dashboard',
    name: 'dashboard',
    title: '–î–∞—à–±–æ—Ä–¥',
    icon: LayoutDashboard,
    component: 'DashboardPage',
    exact: true,
    showInMenu: true,
    requiresAuth: true
  },
  {
    path: '/candidates',
    name: 'candidates',
    title: '–ö–∞–Ω–¥–∏–¥–∞—Ç—ã',
    icon: Users,
    component: 'CandidatesPage',
    exact: true,
    showInMenu: true,
    requiresAuth: true,
    children: [
      {
        path: '/candidates/new',
        name: 'candidates-new',
        title: '–ù–æ–≤—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç',
        component: 'CandidateFormPage',
        exact: true,
        showInMenu: false,
        requiresAuth: true
      },
      {
        path: '/candidates/:id',
        name: 'candidate-details',
        title: '–î–µ—Ç–∞–ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞',
        component: 'CandidateDetailsPage',
        exact: true,
        showInMenu: false,
        requiresAuth: true
      }
    ]
  },
  {
    path: '/silent',
    name: 'silent',
    title: '–ú–æ–ª—á–∞—â–∏–µ',
    icon: Volume2,
    component: 'SilentPage',
    exact: true,
    showInMenu: true,
    requiresAuth: true,
    parent: 'candidates'
  },
  {
    path: '/transferred',
    name: 'transferred',
    title: '–ü–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ',
    icon: SendHorizontal,
    component: 'TransferredPage',
    exact: true,
    showInMenu: true,
    requiresAuth: true,
    parent: 'candidates'
  },
  {
    path: '/shift-workers',
    name: 'shift-workers',
    title: '–í–∞—Ö—Ç–æ–≤–∏–∫–∏',
    icon: HardHat,
    component: 'ShiftWorkersPage',
    exact: true,
    showInMenu: true,
    requiresAuth: true,
    children: [
      {
        path: '/shift-workers/new',
        name: 'shift-worker-new',
        title: '–ù–æ–≤—ã–π –≤–∞—Ö—Ç–æ–≤–∏–∫',
        component: 'ShiftWorkerFormPage',
        exact: true,
        showInMenu: false,
        requiresAuth: true
      },
      {
        path: '/shift-workers/:id',
        name: 'shift-worker-details',
        title: '–î–µ—Ç–∞–ª–∏ –≤–∞—Ö—Ç–æ–≤–∏–∫–∞',
        component: 'ShiftWorkerDetailsPage',
        exact: true,
        showInMenu: false,
        requiresAuth: true
      }
    ]
  },
  {
    path: '/training',
    name: 'training',
    title: '–û–±—É—á–µ–Ω–∏–µ GPT',
    icon: GraduationCap,
    component: 'TrainingPage',
    exact: true,
    showInMenu: true,
    requiresAuth: true
  },
  {
    path: '/knowledge',
    name: 'knowledge',
    title: '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π',
    icon: BookOpen,
    component: 'KnowledgePage',
    exact: true,
    showInMenu: true,
    requiresAuth: true,
    children: [
      {
        path: '/knowledge/new',
        name: 'knowledge-new',
        title: '–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å',
        component: 'KnowledgeFormPage',
        exact: true,
        showInMenu: false,
        requiresAuth: true
      },
      {
        path: '/knowledge/:id',
        name: 'knowledge-details',
        title: '–î–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–∏',
        component: 'KnowledgeDetailsPage',
        exact: true,
        showInMenu: false,
        requiresAuth: true
      }
    ]
  },
  {
    path: '/mailings',
    name: 'mailings',
    title: '–†–∞—Å—Å—ã–ª–∫–∏',
    icon: Mail,
    component: 'MailingsPage',
    exact: true,
    showInMenu: true,
    requiresAuth: true,
    children: [
      {
        path: '/mailings/new',
        name: 'mailing-new',
        title: '–ù–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞',
        component: 'MailingFormPage',
        exact: true,
        showInMenu: false,
        requiresAuth: true
      },
      {
        path: '/mailings/:id',
        name: 'mailing-details',
        title: '–î–µ—Ç–∞–ª–∏ —Ä–∞—Å—Å—ã–ª–∫–∏',
        component: 'MailingDetailsPage',
        exact: true,
        showInMenu: false,
        requiresAuth: true
      }
    ]
  },
  {
    path: '/settings',
    name: 'settings',
    title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
    icon: Settings,
    component: 'SettingsPage',
    exact: true,
    showInMenu: true,
    requiresAuth: true
  }
];

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ –ø–æ –∏–º–µ–Ω–∏
 * @param {string} name - –ò–º—è –º–∞—Ä—à—Ä—É—Ç–∞
 * @returns {Object|null} –û–±—ä–µ–∫—Ç –º–∞—Ä—à—Ä—É—Ç–∞ –∏–ª–∏ null
 */
export const getRouteByName = (name) => {
  const findRoute = (routes) => {
    for (const route of routes) {
      if (route.name === name) {
        return route;
      }
      if (route.children) {
        const found = findRoute(route.children);
        if (found) return found;
      }
    }
    return null;
  };
  
  return findRoute(routes);
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ –ø–æ –ø—É—Ç–∏
 * @param {string} path - –ü—É—Ç—å –º–∞—Ä—à—Ä—É—Ç–∞
 * @returns {Object|null} –û–±—ä–µ–∫—Ç –º–∞—Ä—à—Ä—É—Ç–∞ –∏–ª–∏ null
 */
export const getRouteByPath = (path) => {
  const findRoute = (routes) => {
    for (const route of routes) {
      if (route.path === path) {
        return route;
      }
      if (route.children) {
        const found = findRoute(route.children);
        if (found) return found;
      }
    }
    return null;
  };
  
  return findRoute(routes);
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –º–µ–Ω—é
 * @returns {Array} –ú–∞—Å—Å–∏–≤ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–µ–Ω—é
 */
export const getMenuRoutes = () => {
  return routes.filter(route => route.showInMenu && !route.parent);
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—á–µ—Ä–Ω–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
 * @param {string} parentName - –ò–º—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
 * @returns {Array} –ú–∞—Å—Å–∏–≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
 */
export const getChildRoutes = (parentName) => {
  return routes.filter(route => route.parent === parentName && route.showInMenu);
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞
 * @param {string} path - –ü—É—Ç—å –º–∞—Ä—à—Ä—É—Ç–∞
 * @returns {boolean} –¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
 */
export const requiresAuth = (path) => {
  const route = getRouteByPath(path);
  return route ? route.requiresAuth : false;
};

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫ –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞
 * @param {string} path - –¢–µ–∫—É—â–∏–π –ø—É—Ç—å
 * @returns {Array} –ú–∞—Å—Å–∏–≤ —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫
 */
export const generateBreadcrumbs = (path) => {
  const breadcrumbs = [];
  const parts = path.split('/').filter(Boolean);
  
  let currentPath = '';
  for (const part of parts) {
    currentPath += `/${part}`;
    const route = getRouteByPath(currentPath);
    
    if (route) {
      breadcrumbs.push({
        path: route.path,
        title: route.title,
        name: route.name
      });
    }
  }
  
  return breadcrumbs;
};

/**
 * –≠–∫—Å–ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 */
export default {
  routes,
  getRouteByName,
  getRouteByPath,
  getMenuRoutes,
  getChildRoutes,
  requiresAuth,
  generateBreadcrumbs
};
