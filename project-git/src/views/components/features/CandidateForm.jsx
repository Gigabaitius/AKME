// src/views/components/features/CandidateForm.jsx
/**
 * üìù –§–æ—Ä–º–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
 * @description –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
 */
import React, { useState, useEffect } from 'react';
import { 
  User, 
  Phone, 
  Mail, 
  Briefcase, 
  FileText,
  Calendar,
  MapPin,
  Hash,
  Save,
  X
} from 'lucide-react';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import Button from '../common/Button';

// –ú–æ–¥–µ–ª–∏ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è
import ValidationModel from '@models/ValidationModel';

// –°—Ç–∏–ª–∏
import './CandidateForm.css';

const validator = new ValidationModel();

/**
 * –§–æ—Ä–º–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
 * @param {Object} props - –ü—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {Object} props.candidate - –î–∞–Ω–Ω—ã–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * @param {Function} props.onSubmit - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
 * @param {Function} props.onCancel - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
 * @returns {JSX.Element} –§–æ—Ä–º–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
 */
const CandidateForm = ({ candidate, onSubmit, onCancel }) => {
  const isEditMode = !!candidate;

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    project: '',
    inn: '',
    snils: '',
    passport: '',
    birthDate: '',
    passportIssueDate: '',
    passportIssuedBy: '',
    birthPlace: '',
    registrationAddress: '',
    comment: '',
    status: '–ù–æ–≤—ã–π'
  });

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–æ–∫
  const [errors, setErrors] = useState({});
  const [isSubmitting, setIsSubmitting] = useState(false);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (candidate) {
      setFormData({
        name: candidate.name || '',
        phone: candidate.phone || '',
        email: candidate.email || '',
        project: candidate.project || '',
        inn: candidate.inn || '',
        snils: candidate.snils || '',
        passport: candidate.passport || '',
        birthDate: candidate.birthDate ? candidate.birthDate.split('T')[0] : '',
        passportIssueDate: candidate.passportIssueDate ? candidate.passportIssueDate.split('T')[0] : '',
        passportIssuedBy: candidate.passportIssuedBy || '',
        birthPlace: candidate.birthPlace || '',
        registrationAddress: candidate.registrationAddress || '',
        comment: candidate.comment || '',
        status: candidate.status || '–ù–æ–≤—ã–π'
      });
    }
  }, [candidate]);

  // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));

    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[name]) {
      setErrors(prev => ({
        ...prev,
        [name]: null
      }));
    }
  };

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
  const validateForm = () => {
    const newErrors = {};

    // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!validator.isRequired(formData.name)) {
      newErrors.name = '–§–ò–û –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
    }

    if (!validator.isRequired(formData.phone)) {
      newErrors.phone = '–¢–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
    } else if (!validator.isPhone(formData.phone)) {
      newErrors.phone = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞';
    }

    if (!validator.isRequired(formData.project)) {
      newErrors.project = '–ü—Ä–æ–µ–∫—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
    }

    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π —Ñ–æ—Ä–º–∞—Ç–∞
    if (formData.email && !validator.isEmail(formData.email)) {
      newErrors.email = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email';
    }

    if (formData.inn && !validator.isINN(formData.inn)) {
      newErrors.inn = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ò–ù–ù';
    }

    if (formData.snils && !validator.isSNILS(formData.snils)) {
      newErrors.snils = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –°–ù–ò–õ–°';
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!validateForm()) {
      return;
    }

    setIsSubmitting(true);

    try {
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      const dataToSubmit = {
        ...formData,
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—ã –≤ ISO —Ñ–æ—Ä–º–∞—Ç
        birthDate: formData.birthDate ? new Date(formData.birthDate).toISOString() : null,
        passportIssueDate: formData.passportIssueDate ? new Date(formData.passportIssueDate).toISOString() : null,
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
        updatedAt: new Date().toISOString()
      };

      if (!isEditMode) {
        dataToSubmit.createdAt = new Date().toISOString();
      }

      await onSubmit(dataToSubmit);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã:', error);
    } finally {
      setIsSubmitting(false);
    }
  };

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  const formatPhone = (value) => {
    const numbers = value.replace(/\D/g, '');
    if (numbers.length <= 1) return numbers;
    if (numbers.length <= 4) return `+${numbers.slice(0, 1)} ${numbers.slice(1)}`;
    if (numbers.length <= 7) return `+${numbers.slice(0, 1)} ${numbers.slice(1, 4)} ${numbers.slice(4)}`;
    if (numbers.length <= 9) return `+${numbers.slice(0, 1)} ${numbers.slice(1, 4)} ${numbers.slice(4, 7)}-${numbers.slice(7)}`;
    return `+${numbers.slice(0, 1)} ${numbers.slice(1, 4)} ${numbers.slice(4, 7)}-${numbers.slice(7, 9)}-${numbers.slice(9, 11)}`;
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  const handlePhoneChange = (e) => {
    const formatted = formatPhone(e.target.value);
    setFormData(prev => ({ ...prev, phone: formatted }));
  };

  return (
    <form className="candidate-form" onSubmit={handleSubmit}>
      {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="form-section">
        <h3 className="section-title">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
        
        <div className="form-grid">
          <div className="form-group">
            <label htmlFor="name" className="required">
              <User size={16} />
              –§–ò–û
            </label>
            <input
              type="text"
              id="name"
              name="name"
              value={formData.name}
              onChange={handleChange}
              placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
              className={errors.name ? 'error' : ''}
              required
            />
            {errors.name && <span className="error-message">{errors.name}</span>}
          </div>

          <div className="form-group">
            <label htmlFor="phone" className="required">
              <Phone size={16} />
              –¢–µ–ª–µ—Ñ–æ–Ω
            </label>
            <input
              type="tel"
              id="phone"
              name="phone"
              value={formData.phone}
              onChange={handlePhoneChange}
              placeholder="+7 999 123-45-67"
              className={errors.phone ? 'error' : ''}
              required
            />
            {errors.phone && <span className="error-message">{errors.phone}</span>}
          </div>

          <div className="form-group">
            <label htmlFor="email">
              <Mail size={16} />
              Email
            </label>
            <input
              type="email"
              id="email"
              name="email"
              value={formData.email}
              onChange={handleChange}
              placeholder="ivanov@example.com"
              className={errors.email ? 'error' : ''}
            />
            {errors.email && <span className="error-message">{errors.email}</span>}
          </div>

          <div className="form-group">
            <label htmlFor="project" className="required">
              <Briefcase size={16} />
              –ü—Ä–æ–µ–∫—Ç
            </label>
            <input
              type="text"
              id="project"
              name="project"
              value={formData.project}
              onChange={handleChange}
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
              className={errors.project ? 'error' : ''}
              required
            />
            {errors.project && <span className="error-message">{errors.project}</span>}
          </div>
        </div>
      </div>

      {/* –î–æ–∫—É–º–µ–Ω—Ç—ã */}
      <div className="form-section">
        <h3 className="section-title">–î–æ–∫—É–º–µ–Ω—Ç—ã</h3>
        
        <div className="form-grid">
          <div className="form-group">
            <label htmlFor="passport">
              <FileText size={16} />
              –ü–∞—Å–ø–æ—Ä—Ç
            </label>
            <input
              type="text"
              id="passport"
              name="passport"
              value={formData.passport}
              onChange={handleChange}
              placeholder="1234 567890"
            />
          </div>

          <div className="form-group">
            <label htmlFor="inn">
              <Hash size={16} />
              –ò–ù–ù
            </label>
            <input
              type="text"
              id="inn"
              name="inn"
              value={formData.inn}
              onChange={handleChange}
              placeholder="123456789012"
              maxLength="12"
              className={errors.inn ? 'error' : ''}
            />
            {errors.inn && <span className="error-message">{errors.inn}</span>}
          </div>

          <div className="form-group">
            <label htmlFor="snils">
              <Hash size={16} />
              –°–ù–ò–õ–°
            </label>
            <input
              type="text"
              id="snils"
              name="snils"
              value={formData.snils}
              onChange={handleChange}
              placeholder="123-456-789 00"
              className={errors.snils ? 'error' : ''}
            />
            {errors.snils && <span className="error-message">{errors.snils}</span>}
          </div>

          <div className="form-group">
            <label htmlFor="birthDate">
              <Calendar size={16} />
              –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
            </label>
            <input
              type="date"
              id="birthDate"
              name="birthDate"
              value={formData.birthDate}
              onChange={handleChange}
            />
          </div>
        </div>
      </div>

      {/* –ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
      <div className="form-section">
        <h3 className="section-title">–ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h3>
        
        <div className="form-grid">
          <div className="form-group">
            <label htmlFor="passportIssueDate">
              <Calendar size={16} />
              –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏
            </label>
            <input
              type="date"
              id="passportIssueDate"
              name="passportIssueDate"
              value={formData.passportIssueDate}
              onChange={handleChange}
            />
          </div>

          <div className="form-group full-width">
            <label htmlFor="passportIssuedBy">
              <FileText size={16} />
              –ö–µ–º –≤—ã–¥–∞–Ω
            </label>
            <input
              type="text"
              id="passportIssuedBy"
              name="passportIssuedBy"
              value={formData.passportIssuedBy}
              onChange={handleChange}
              placeholder="–û–í–î —Ä–∞–π–æ–Ω–∞..."
            />
          </div>

          <div className="form-group">
            <label htmlFor="birthPlace">
              <MapPin size={16} />
              –ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è
            </label>
            <input
              type="text"
              id="birthPlace"
              name="birthPlace"
              value={formData.birthPlace}
              onChange={handleChange}
              placeholder="–≥. –ú–æ—Å–∫–≤–∞"
            />
          </div>

          <div className="form-group full-width">
            <label htmlFor="registrationAddress">
              <MapPin size={16} />
              –ê–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            </label>
            <input
              type="text"
              id="registrationAddress"
              name="registrationAddress"
              value={formData.registrationAddress}
              onChange={handleChange}
              placeholder="–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 1, –∫–≤. 1"
            />
          </div>
        </div>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="form-section">
        <h3 className="section-title">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
        
        <div className="form-group">
          <label htmlFor="status">
            –°—Ç–∞—Ç—É—Å
          </label>
          <select
            id="status"
            name="status"
            value={formData.status}
            onChange={handleChange}
          >
            <option value="–ù–æ–≤—ã–π">–ù–æ–≤—ã–π</option>
            <option value="–ê–∫—Ç–∏–≤–µ–Ω">–ê–∫—Ç–∏–≤–µ–Ω</option>
            <option value="–ú–æ–ª—á–∏—Ç">–ú–æ–ª—á–∏—Ç</option>
            <option value="–ü–µ—Ä–µ–¥–∞–Ω">–ü–µ—Ä–µ–¥–∞–Ω</option>
            <option value="–î–æ–≤–µ–¥–µ–Ω">–î–æ–≤–µ–¥–µ–Ω</option>
            <option value="–û—Ç–∫–∞–∑">–û—Ç–∫–∞–∑</option>
          </select>
        </div>

        <div className="form-group full-width">
          <label htmlFor="comment">
            –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
          </label>
          <textarea
            id="comment"
            name="comment"
            value={formData.comment}
            onChange={handleChange}
            placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–¥–∏–¥–∞—Ç–µ..."
            rows={4}
          />
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="form-actions">
        <Button
          type="button"
          variant="secondary"
          onClick={onCancel}
          disabled={isSubmitting}
        >
          <X size={20} />
          –û—Ç–º–µ–Ω–∞
        </Button>
        
        <Button
          type="submit"
          variant="primary"
          loading={isSubmitting}
          disabled={isSubmitting}
        >
          <Save size={20} />
          {isEditMode ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞'}
        </Button>
      </div>
    </form>
  );
};

export default CandidateForm;
