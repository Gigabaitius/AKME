// src/views/components/features/ExtensionSetup.jsx
/**
 * üîå –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
 * @description –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
 */
import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  Download, 
  CheckCircle, 
  AlertCircle, 
  Chrome,
  Settings,
  Link,
  ArrowRight,
  X
} from 'lucide-react';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import Button from '../common/Button';

// –°—Ç–∏–ª–∏
import './ExtensionSetup.css';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
 * @param {Object} props - –ü—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {Function} props.onComplete - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 * @param {Function} props.onSkip - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–ø—É—Å–∫–∞
 * @returns {JSX.Element} –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 */
const ExtensionSetup = ({ onComplete, onSkip }) => {
  const [currentStep, setCurrentStep] = useState(1);
  const [isExtensionDetected, setIsExtensionDetected] = useState(false);
  const [isChecking, setIsChecking] = useState(true);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
  useEffect(() => {
    const checkExtension = () => {
      setIsChecking(true);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –æ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
      setTimeout(() => {
        const hasExtension = window.HRAssistantAPI !== undefined;
        setIsExtensionDetected(hasExtension);
        setIsChecking(false);
        
        if (hasExtension) {
          setCurrentStep(3);
        }
      }, 1000);
    };

    checkExtension();
    
    // –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
    const handleMessage = (event) => {
      if (event.data.type === 'HR_ASSISTANT_EXTENSION_READY') {
        setIsExtensionDetected(true);
        setCurrentStep(3);
      }
    };

    window.addEventListener('message', handleMessage);
    return () => window.removeEventListener('message', handleMessage);
  }, []);

  // –®–∞–≥–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
  const steps = [
    {
      id: 1,
      title: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ',
      description: '–°–∫–∞—á–∞–π—Ç–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ HR Assistant',
      icon: <Download size={48} />,
      action: (
        <div className="step-actions">
          <Button
            variant="primary"
            onClick={() => {
              // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
              window.open('/browser-extension/README.md', '_blank');
              setCurrentStep(2);
            }}
          >
            <Chrome size={20} />
            –°–∫–∞—á–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
          </Button>
          <p className="step-note">
            –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è Chrome, Edge, Brave –∏ –¥—Ä—É–≥–∏–µ Chromium-–±—Ä–∞—É–∑–µ—Ä—ã
          </p>
        </div>
      )
    },
    {
      id: 2,
      title: '–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ',
      description: '–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è',
      icon: <Settings size={48} />,
      content: (
        <div className="installation-guide">
          <ol>
            <li>
              <strong>–û—Ç–∫—Ä–æ–π—Ç–µ chrome://extensions/</strong>
              <p>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É –±—Ä–∞—É–∑–µ—Ä–∞</p>
            </li>
            <li>
              <strong>–í–∫–ª—é—á–∏—Ç–µ "–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞"</strong>
              <p>–ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É</p>
            </li>
            <li>
              <strong>–ù–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–µ"</strong>
              <p>–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É browser-extension –∏–∑ –∞—Ä—Ö–∏–≤–∞</p>
            </li>
            <li>
              <strong>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É</strong>
              <p>–ò–∫–æ–Ω–∫–∞ HR Assistant –¥–æ–ª–∂–Ω–∞ –ø–æ—è–≤–∏—Ç—å—Å—è –≤ –ø–∞–Ω–µ–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π</p>
            </li>
          </ol>
        </div>
      ),
      action: (
        <Button
          variant="primary"
          onClick={() => window.location.reload()}
          disabled={isChecking}
        >
          {isChecking ? '–ü—Ä–æ–≤–µ—Ä–∫–∞...' : '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ'}
        </Button>
      )
    },
    {
      id: 3,
      title: '–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ!',
      description: '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ HR Assistant',
      icon: <CheckCircle size={48} className="success-icon" />,
      content: (
        <div className="features-list">
          <h4>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</h4>
          <ul>
            <li>
              <Link size={16} />
              <span>WhatsApp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π</span>
            </li>
            <li>
              <Link size={16} />
              <span>Google Sheets - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤</span>
            </li>
            <li>
              <Link size={16} />
              <span>OCR - —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–∑ —á–∞—Ç–æ–≤</span>
            </li>
            <li>
              <Link size={16} />
              <span>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è - SMS –∏ Telegram –æ–ø–æ–≤–µ—â–µ–Ω–∏—è</span>
            </li>
          </ul>
        </div>
      ),
      action: (
        <Button
          variant="primary"
          onClick={onComplete}
        >
          –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
          <ArrowRight size={20} />
        </Button>
      )
    }
  ];

  const currentStepData = steps.find(step => step.id === currentStep);

  return (
    <div className="extension-setup-overlay">
      <motion.div
        className="extension-setup-modal"
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        exit={{ opacity: 0, scale: 0.9 }}
      >
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="setup-header">
          <h2>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ HR Assistant</h2>
          <button
            className="setup-close"
            onClick={onSkip}
            aria-label="–ó–∞–∫—Ä—ã—Ç—å"
          >
            <X size={24} />
          </button>
        </div>

        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
        <div className="setup-progress">
          {steps.map((step, index) => (
            <div
              key={step.id}
              className={`progress-step ${
                currentStep >= step.id ? 'active' : ''
              } ${currentStep === step.id ? 'current' : ''}`}
            >
              <div className="step-number">{index + 1}</div>
              <div className="step-line" />
            </div>
          ))}
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç —à–∞–≥–∞ */}
        <AnimatePresence mode="wait">
          <motion.div
            key={currentStep}
            className="setup-content"
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -20 }}
            transition={{ duration: 0.3 }}
          >
            <div className="step-icon">{currentStepData.icon}</div>
            <h3 className="step-title">{currentStepData.title}</h3>
            <p className="step-description">{currentStepData.description}</p>
            
            {currentStepData.content && (
              <div className="step-content">
                {currentStepData.content}
              </div>
            )}
            
            <div className="step-footer">
              {currentStepData.action}
            </div>
          </motion.div>
        </AnimatePresence>

        {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ */}
        {!isExtensionDetected && currentStep > 1 && !isChecking && (
          <div className="setup-warning">
            <AlertCircle size={20} />
            <span>
              –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ.
            </span>
          </div>
        )}

        {/* –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å */}
        <div className="setup-skip">
          <button
            className="skip-button"
            onClick={onSkip}
          >
            –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∑–∂–µ
          </button>
          <p className="skip-note">
            –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–æ–∑–∂–µ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
          </p>
        </div>
      </motion.div>
    </div>
  );
};

export default ExtensionSetup;
