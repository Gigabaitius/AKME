// src/views/components/common/ErrorBoundary.jsx
/**
 * üö® –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ React
 * @description –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
 */
import React, { Component } from 'react';
import { AlertTriangle, RefreshCw, Home } from 'lucide-react';
import Logger from '@utils/Logger';
import './ErrorBoundary.css';

const logger = new Logger('ErrorBoundary');

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
 */
class ErrorBoundary extends Component {
  constructor(props) {
    super(props);
    this.state = {
      hasError: false,
      error: null,
      errorInfo: null,
      errorCount: 0
    };
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
   * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
   * @returns {Object} –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
   */
  static getDerivedStateFromError(error) {
    return { hasError: true };
  }

  /**
   * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
   * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
   * @param {Object} errorInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
   */
  componentDidCatch(error, errorInfo) {
    logger.error('–ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ React:', {
      error: error.toString(),
      stack: error.stack,
      componentStack: errorInfo.componentStack
    });

    this.setState(prevState => ({
      error,
      errorInfo,
      errorCount: prevState.errorCount + 1
    }));

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—à–∏–±–∫–∏ –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)
    if (window.errorReporter) {
      window.errorReporter.captureException(error, {
        extra: errorInfo
      });
    }
  }

  /**
   * –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—à–∏–±–∫–∏
   */
  handleReset = () => {
    this.setState({
      hasError: false,
      error: null,
      errorInfo: null
    });
  };

  /**
   * –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   */
  handleReload = () => {
    window.location.reload();
  };

  /**
   * –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
   */
  handleGoHome = () => {
    window.location.href = '/';
  };

  render() {
    const { hasError, error, errorInfo, errorCount } = this.state;
    const { children, fallback } = this.props;

    if (hasError) {
      // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—à–∏–±–∫–∏
      if (fallback) {
        return fallback({ error, errorInfo, resetError: this.handleReset });
      }

      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —ç–∫—Ä–∞–Ω –æ—à–∏–±–∫–∏
      return (
        <div className="error-boundary">
          <div className="error-container">
            <div className="error-icon">
              <AlertTriangle size={64} />
            </div>

            <h1 className="error-title">–£–ø—Å! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</h1>
            
            <p className="error-message">
              –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –µ—ë —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ–º.
            </p>

            {/* –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ */}
            {process.env.NODE_ENV === 'development' && error && (
              <details className="error-details">
                <summary>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏</summary>
                <div className="error-stack">
                  <p className="error-name">{error.toString()}</p>
                  <pre>{error.stack}</pre>
                  {errorInfo && (
                    <div className="component-stack">
                      <p>–°—Ç–µ–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:</p>
                      <pre>{errorInfo.componentStack}</pre>
                    </div>
                  )}
                </div>
              </details>
            )}

            {/* –î–µ–π—Å—Ç–≤–∏—è */}
            <div className="error-actions">
              <button
                className="error-button primary"
                onClick={this.handleReset}
              >
                <RefreshCw size={20} />
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>

              <button
                className="error-button secondary"
                onClick={this.handleReload}
              >
                –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
              </button>

              <button
                className="error-button secondary"
                onClick={this.handleGoHome}
              >
                <Home size={20} />
                –ù–∞ –≥–ª–∞–≤–Ω—É—é
              </button>
            </div>

            {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö */}
            {errorCount > 2 && (
              <div className="error-warning">
                <p>
                  –ü–æ—Ö–æ–∂–µ, –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ 
                  –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.
                </p>
              </div>
            )}
          </div>
        </div>
      );
    }

    return children;
  }
}

export default ErrorBoundary;
