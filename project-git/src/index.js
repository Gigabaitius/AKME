// src/index.js
/**
 * üöÄ HR Assistant - –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @description –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å MVC –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
 */
import React from 'react';
import { createRoot } from 'react-dom/client';
import App from './App';

// –ò–º–ø–æ—Ä—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π
import '@styles/globals.css';
import '@styles/variables.css';
import '@styles/themes.css';
import '@styles/components.css';
import '@styles/animations.css';
import '@styles/responsive.css';

// –ò–º–ø–æ—Ä—Ç –ø–æ–ª–∏—Ñ–∏–ª–ª–æ–≤ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
import 'core-js/stable';
import 'regenerator-runtime/runtime';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
import Logger from '@utils/Logger';
const logger = new Logger('App');

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ React
const ErrorBoundary = React.lazy(() => import('@components/common/ErrorBoundary'));

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const initializeApp = async () => {
  try {
    logger.info('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HR Assistant...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –±—Ä–∞—É–∑–µ—Ä–∞
    if (!window.Promise || !window.fetch || !window.localStorage) {
      throw new Error('–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –û–±–Ω–æ–≤–∏—Ç–µ –±—Ä–∞—É–∑–µ—Ä –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏.');
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    document.title = import.meta.env.VITE_APP_NAME || 'HR Assistant';
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç React
    const container = document.getElementById('root');
    if (!container) {
      throw new Error('–ö–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç #root –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    const root = createRoot(container);
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    if (window.hrAssistantReady) {
      window.hrAssistantReady();
    }
    
    // –†–µ–Ω–¥–µ—Ä–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    root.render(
      <React.StrictMode>
        <React.Suspense fallback={
          <div className="app-loading">
            <div className="loading-spinner"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...</p>
          </div>
        }>
          <ErrorBoundary>
            <App />
          </ErrorBoundary>
        </React.Suspense>
      </React.StrictMode>
    );
    
    logger.info('‚úÖ HR Assistant —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞)
    if (import.meta.env.VITE_ENABLE_ANALYTICS === 'true') {
      // TODO: –î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    }
    
  } catch (error) {
    logger.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    const container = document.getElementById('root');
    if (container) {
      container.innerHTML = `
        <div style="
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          height: 100vh;
          padding: 2rem;
          text-align: center;
          font-family: system-ui, -apple-system, sans-serif;
          background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);
          color: #991b1b;
        ">
          <h1>‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h1>
          <p style="margin: 1rem 0; max-width: 500px; line-height: 1.6;">
            ${error.message}
          </p>
          <button onclick="window.location.reload()" style="
            padding: 0.75rem 1.5rem;
            background: #dc2626;
            color: white;
            border: none;
            border-radius: 0.5rem;
            cursor: pointer;
            font-size: 1rem;
          ">
            üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </button>
          <details style="margin-top: 2rem; max-width: 600px;">
            <summary style="cursor: pointer; margin-bottom: 1rem;">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</summary>
            <pre style="
              background: rgba(0,0,0,0.1);
              padding: 1rem;
              border-radius: 0.5rem;
              text-align: left;
              overflow: auto;
              font-size: 0.8rem;
            ">${error.stack || error.message}</pre>
          </details>
        </div>
      `;
    }
  }
};

// –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', initializeApp);
} else {
  initializeApp();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫
window.addEventListener('error', (event) => {
  logger.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error);
});

window.addEventListener('unhandledrejection', (event) => {
  logger.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ Promise:', event.reason);
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
export { initializeApp };